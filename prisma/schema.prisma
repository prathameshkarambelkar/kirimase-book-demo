// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id
  email          String    @unique
  hashedPassword String
  name           String?
  sessions       Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Author {
  id        String   @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]
}

model Book {
  id          String       @id @default(cuid())
  title       String
  completed   Boolean
  author      Author       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  quotes      Quote[]
  reflections Reflection[]

  @@index([userId])
}

model Quote {
  id        String   @id @default(cuid())
  content   String
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Reflection {
  id        String   @id @default(cuid())
  content   String
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
